spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化时建立物理连接连接的个数
spring.datasource.initialSize=5
# 最小连接池数量
spring.datasource.minIdle=5
# 最大连接池数量
spring.datasource.maxActive=20
# 获取连接时最大等待时间(ms)，即60s
spring.datasource.maxWait=60000
# 1.Destroy线程会检测连接的间隔时间；2.testWhileIdle的判断依据
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 最小生存时间ms
spring.datasource.minEvictableIdleTimeMillis=600000
spring.datasource.maxEvictableIdleTimeMillis=900000
# 用来检测连接是否有效的sql
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# 申请连接时执行validationQuery检测连接是否有效，启用会降低性能
spring.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，启用会降低性能
spring.datasource.testOnReturn=false
# 执行validationQuery检测连接是否有效，不会降低性能
spring.datasource.testWhileIdle=true
# 是否缓存preparedStatement，mysql建议关闭
spring.datasource.poolPreparedStatements=false
spring.datasource.filters=stat,wall,log4j
spring.freemarker.suffix=.html
spring.freemarker.charset=utf-8
# 配置静态资源映射路径
spring.mvc.static-path-pattern=/static/**
mybatis.mapper-locations=classpath:mapper/*.xml
# 虽然可以配置这项来进行pojo包扫描，但其实我更倾向于在mapper.xml写全类名
mybatis.type-aliases-package=com.dk.blog.model